Don't leak EC2 spot request when it's not immediately fulfilled

http://trac.buildbot.net/ticket/2935

--- buildbot-0.8.10.orig/buildbot/buildslave/ec2.py
+++ buildbot-0.8.10/buildbot/buildslave/ec2.py
@@ -204,6 +204,7 @@
         self.elastic_ip = elastic_ip
         self.tags = tags
         self.instance_profile_name = instance_profile_name
+        self._spot_request = None
 
     def get_image(self):
         if self.image is not None:
@@ -290,6 +291,9 @@
             # be gentle.  Something may just be trying to alert us that an
             # instance never attached, and it's because, somehow, we never
             # started.
+            if self._spot_request is not None:
+                self._spot_request.cancel()
+                self._spot_request = None
             return defer.succeed(None)
         instance = self.instance
         self.output = self.instance = None
@@ -404,6 +408,7 @@
     def _wait_for_request(self, reservation):
         log.msg('%s %s requesting spot instance' %
                 (self.__class__.__name__, self.slavename))
+        self._spot_request = reservation
         duration = 0
         interval = self._poll_resolution
         time.sleep(interval)
@@ -422,6 +427,7 @@
                 request_ids=[request.id])
             request = requests[0]
             request_status = request.status.code
+        self._spot_request = None
         if request_status == FULFILLED:
             minutes = duration // 60
             seconds = duration % 60
@@ -431,11 +437,13 @@
                      request.id, minutes, seconds))
             return request
         elif request_status == PRICE_TOO_LOW:
+            request.cancel()
             log.msg('%s %s spot request rejected, spot price too low' %
                     (self.__class__.__name__, self.slavename))
             raise interfaces.LatentBuildSlaveFailedToSubstantiate(
                 request.id, request.status)
         else:
+            request.cancel()
             log.msg('%s %s failed to fulfill spot request %s with status %s' %
                     (self.__class__.__name__, self.slavename,
                      request.id, request_status))
